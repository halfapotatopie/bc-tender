{"ast":null,"code":"import _regeneratorRuntime from \"/Users/raine/Documents/GitHub/bc-tender/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/raine/Documents/GitHub/bc-tender/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n//import web3\nvar Web3 = require('web3');\n\nvar web3 = new Web3('http://localhost:8545', null, {}); //set ethereum node RPC\n//setup contract object\n\nvar HashGeneratorJson = require(\"./contracts/HashGenerator.json\");\n\nvar hgChainId = Object.keys(HashGeneratorJson.networks)[0];\n\nvar TenderJson = require(\"./contracts/Tender.json\"); //set ABI output from truffle\n\n\nvar tChainId = Object.keys(TenderJson.networks)[0]; //picks the first deployed network\n//make sure this is the right deployed network\n\nvar HashGenerator = new web3.eth.Contract(HashGeneratorJson.abi, HashGeneratorJson.networks[hgChainId].address);\nvar Tender = new web3.eth.Contract(TenderJson.abi, TenderJson.networks[tChainId].address);\nexport function getAllAccounts() {\n  return _getAllAccounts.apply(this, arguments);\n}\n\nfunction _getAllAccounts() {\n  _getAllAccounts = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var accounts;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return web3.eth.getAccounts();\n\n          case 2:\n            accounts = _context.sent;\n            return _context.abrupt(\"return\", accounts);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getAllAccounts.apply(this, arguments);\n}\n\n;\nexport function getHash(_x, _x2) {\n  return _getHash.apply(this, arguments);\n}\n\nfunction _getHash() {\n  _getHash = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(nonce, amount) {\n    var hash;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return HashGenerator.methods.generateHash(nonce, amount).call();\n\n          case 3:\n            hash = _context2.sent;\n            return _context2.abrupt(\"return\", hash);\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            throw _context2.t0;\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 7]]);\n  }));\n  return _getHash.apply(this, arguments);\n}\n\n;\nexport function getPhase() {\n  return _getPhase.apply(this, arguments);\n}\n\nfunction _getPhase() {\n  _getPhase = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3() {\n    var phase;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            console.log(Te);\n            _context3.next = 4;\n            return Tender.methods.getPhase().call();\n\n          case 4:\n            phase = _context3.sent;\n            console.log(\"this is in util\");\n            console.log(phase);\n            return _context3.abrupt(\"return\", phase);\n\n          case 10:\n            _context3.prev = 10;\n            _context3.t0 = _context3[\"catch\"](0);\n            throw _context3.t0;\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 10]]);\n  }));\n  return _getPhase.apply(this, arguments);\n}\n\n;\nexport function submitHashedBid(_x3, _x4) {\n  return _submitHashedBid.apply(this, arguments);\n}\n\nfunction _submitHashedBid() {\n  _submitHashedBid = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4(account, hash) {\n    var action;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return Tender.methods.makeBid(hash).send({\n              from: account\n            });\n\n          case 3:\n            action = _context4.sent;\n            return _context4.abrupt(\"return\");\n\n          case 7:\n            _context4.prev = 7;\n            _context4.t0 = _context4[\"catch\"](0);\n            throw _context4.t0;\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[0, 7]]);\n  }));\n  return _submitHashedBid.apply(this, arguments);\n}\n\n;\nexport function revealBid(_x5, _x6, _x7) {\n  return _revealBid.apply(this, arguments);\n}\n\nfunction _revealBid() {\n  _revealBid = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5(account, nonce, amount) {\n    var action;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.prev = 0;\n            _context5.next = 3;\n            return Tender.methods.revealBid(nonce, amount).send({\n              from: account\n            });\n\n          case 3:\n            action = _context5.sent;\n            return _context5.abrupt(\"return\");\n\n          case 7:\n            _context5.prev = 7;\n            _context5.t0 = _context5[\"catch\"](0);\n            throw _context5.t0;\n\n          case 10:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[0, 7]]);\n  }));\n  return _revealBid.apply(this, arguments);\n}\n\n;\nexport function endRevelation(_x8) {\n  return _endRevelation.apply(this, arguments);\n}\n\nfunction _endRevelation() {\n  _endRevelation = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee6(account) {\n    var action;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _context6.next = 3;\n            return Tender.methods.endRevelation().send({\n              from: account\n            });\n\n          case 3:\n            action = _context6.sent;\n            _context6.next = 9;\n            break;\n\n          case 6:\n            _context6.prev = 6;\n            _context6.t0 = _context6[\"catch\"](0);\n            throw _context6.t0;\n\n          case 9:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[0, 6]]);\n  }));\n  return _endRevelation.apply(this, arguments);\n}\n\n;\nexport function closeContract(_x9) {\n  return _closeContract.apply(this, arguments);\n}\n\nfunction _closeContract() {\n  _closeContract = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee7(account) {\n    var action;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            _context7.next = 3;\n            return Tender.methods.close().send({\n              from: account\n            });\n\n          case 3:\n            action = _context7.sent;\n            _context7.next = 9;\n            break;\n\n          case 6:\n            _context7.prev = 6;\n            _context7.t0 = _context7[\"catch\"](0);\n            throw _context7.t0;\n\n          case 9:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[0, 6]]);\n  }));\n  return _closeContract.apply(this, arguments);\n}\n\n;\nexport function reopenTender(_x10, _x11, _x12, _x13, _x14) {\n  return _reopenTender.apply(this, arguments);\n}\n\nfunction _reopenTender() {\n  _reopenTender = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee8(account, desc, biddingDuration, revelationDuration, depositAmount) {\n    var action;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n            _context8.next = 3;\n            return Tender.methods.reopenTender(desc, biddingDuration, revelationDuration, depositAmount).send({\n              from: account\n            });\n\n          case 3:\n            action = _context8.sent;\n            return _context8.abrupt(\"return\");\n\n          case 7:\n            _context8.prev = 7;\n            _context8.t0 = _context8[\"catch\"](0);\n            throw _context8.t0;\n\n          case 10:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[0, 7]]);\n  }));\n  return _reopenTender.apply(this, arguments);\n}\n\n;\nexport function getProjectDetails() {\n  return _getProjectDetails.apply(this, arguments);\n}\n\nfunction _getProjectDetails() {\n  _getProjectDetails = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee9() {\n    var details;\n    return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.prev = 0;\n            _context9.next = 3;\n            return Tender.methods.getProjectDetails().call();\n\n          case 3:\n            details = _context9.sent;\n            return _context9.abrupt(\"return\", details);\n\n          case 7:\n            _context9.prev = 7;\n            _context9.t0 = _context9[\"catch\"](0);\n            throw _context9.t0;\n\n          case 10:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9, null, [[0, 7]]);\n  }));\n  return _getProjectDetails.apply(this, arguments);\n}\n\n;\nexport function getResult() {\n  return _getResult.apply(this, arguments);\n}\n\nfunction _getResult() {\n  _getResult = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee10() {\n    var result;\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.prev = 0;\n            _context10.next = 3;\n            return Tender.methods.getResults().call();\n\n          case 3:\n            result = _context10.sent;\n            return _context10.abrupt(\"return\", result);\n\n          case 7:\n            _context10.prev = 7;\n            _context10.t0 = _context10[\"catch\"](0);\n            throw _context10.t0;\n\n          case 10:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[0, 7]]);\n  }));\n  return _getResult.apply(this, arguments);\n}\n\n;","map":{"version":3,"sources":["/Users/raine/Documents/GitHub/bc-tender/app/src/util.js"],"names":["Web3","require","web3","HashGeneratorJson","hgChainId","Object","keys","networks","TenderJson","tChainId","HashGenerator","eth","Contract","abi","address","Tender","getAllAccounts","getAccounts","accounts","getHash","nonce","amount","methods","generateHash","call","hash","getPhase","console","log","Te","phase","submitHashedBid","account","makeBid","send","from","action","revealBid","endRevelation","closeContract","close","reopenTender","desc","biddingDuration","revelationDuration","depositAmount","getProjectDetails","details","getResult","getResults","result"],"mappings":"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","sourcesContent":["//import web3\nconst Web3 = require('web3');\nconst web3 = new Web3('http://localhost:8545', null, {});   //set ethereum node RPC\n\n//setup contract object\nconst HashGeneratorJson = require(\"./contracts/HashGenerator.json\");\nconst hgChainId = Object.keys(HashGeneratorJson.networks)[0];\nconst TenderJson = require(\"./contracts/Tender.json\");  //set ABI output from truffle\nconst tChainId = Object.keys(TenderJson.networks)[0]; //picks the first deployed network\n                                                            //make sure this is the right deployed network\nconst HashGenerator = new web3.eth.Contract(HashGeneratorJson.abi, HashGeneratorJson.networks[hgChainId].address);\nconst Tender = new web3.eth.Contract(TenderJson.abi, TenderJson.networks[tChainId].address);\n\n\nexport async function getAllAccounts() {\n  let accounts = await web3.eth.getAccounts();\n  return accounts;\n};\n\nexport async function getHash(nonce, amount) {\n  try {\n    let hash = await HashGenerator.methods.generateHash(nonce, amount).call();\n    return hash;\n  } catch(err) {\n    throw err;\n  }\n};\n\nexport async function getPhase() {\n  try {\n    console.log(Te)\n    let phase = await Tender.methods.getPhase().call();\n    console.log(\"this is in util\");\n    console.log(phase);\n    return phase;\n  } catch(err) {\n    throw err;\n  }\n};\n\nexport async function submitHashedBid(account, hash) {\n  try {\n    let action = await Tender.methods.makeBid(hash).send({from: account});\n    return;\n  } catch(err) {\n    throw err;\n  }\n};\n\nexport async function revealBid(account, nonce, amount) {\n  try {\n    let action = await Tender.methods.revealBid(nonce, amount).send({from: account});\n    return;\n  } catch(err) {\n    throw err;\n  }\n};\n\nexport async function endRevelation(account) {\n  try {\n    let action = await Tender.methods.endRevelation().send({from: account});\n  } catch(err) {\n    throw err;\n  }\n};\n\nexport async function closeContract(account) {\n  try {\n    let action = await Tender.methods.close().send({from: account});\n  } catch(err) {\n    throw err;\n  }\n};\n\nexport async function reopenTender(account, desc, biddingDuration, revelationDuration, depositAmount) {\n  try {\n    let action = await Tender.methods.reopenTender(desc, biddingDuration, revelationDuration,depositAmount).send({from: account});\n    return;\n  } catch(err) {\n    throw err;\n  }\n};\n\nexport async function getProjectDetails() {\n  try {\n    let details = await Tender.methods.getProjectDetails().call();\n    return details;\n  } catch(err) {\n    throw err;\n  }\n};\n\nexport async function getResult() {\n  try {\n    let result = await Tender.methods.getResults().call();\n    return result;\n  } catch(err) {\n    throw err;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}