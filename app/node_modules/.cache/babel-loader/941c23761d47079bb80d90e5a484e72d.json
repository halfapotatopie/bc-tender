{"ast":null,"code":"import _defineProperty from \"/Users/raine/Documents/GitHub/bc-tender/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/raine/Documents/GitHub/bc-tender/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/raine/Documents/GitHub/bc-tender/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/raine/Documents/GitHub/bc-tender/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/raine/Documents/GitHub/bc-tender/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/raine/Documents/GitHub/bc-tender/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/raine/Documents/GitHub/bc-tender/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/raine/Documents/GitHub/bc-tender/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/raine/Documents/GitHub/bc-tender/app/src/SubmitBidComponent.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Container, TextField } from '@material-ui/core';\nimport { Button, Form, Input, notification, Select } from 'antd';\nimport { AccountData, ContractData, ContractForm } from \"drizzle-react-components\";\nimport { getAllAccounts, getPhase, getProjectDetails, getHash, submitHashedBid } from \"./util\";\nvar Option = Select.Option;\nvar NONNEGINT_REGEX = RegExp('^[1-9]+[0-9]*$|^0$');\nvar POSINT_REGEX = RegExp('^[1-9]+[0-9]*$');\nvar deposit = 1; // to remove\n\nvar SubmitBidComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SubmitBidComponent, _React$Component);\n\n  function SubmitBidComponent(props) {\n    var _this;\n\n    _classCallCheck(this, SubmitBidComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SubmitBidComponent).call(this, props));\n    _this.state = {\n      validPhase: false,\n      projectDetails: {},\n      detailsLoaded: false,\n      accounts: [],\n      accountsLoaded: false,\n      chosenAccount: \"\",\n      accountChosen: false,\n      nonce: {\n        value: 0,\n        validateStatus: \"\",\n        errorMsg: null\n      },\n      bidAmount: {\n        value: 0,\n        validateStatus: \"\",\n        errorMsg: null\n      }\n    };\n    _this.checkPhase = _this.checkPhase.bind(_assertThisInitialized(_this));\n    _this.loadProjectDetails = _this.loadProjectDetails.bind(_assertThisInitialized(_this));\n    _this.loadAccounts = _this.loadAccounts.bind(_assertThisInitialized(_this));\n    _this.handleAccountChange = _this.handleAccountChange.bind(_assertThisInitialized(_this));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.validateNonce = _this.validateNonce.bind(_assertThisInitialized(_this));\n    _this.validateAmount = _this.validateAmount.bind(_assertThisInitialized(_this));\n    _this.isFormValid = _this.isFormValid.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(SubmitBidComponent, [{\n    key: \"checkPhase\",\n    value: function checkPhase() {\n      var _this2 = this;\n\n      getPhase().then(function (phase) {\n        if (phase === \"Bidding Period\") {\n          _this2.setState({\n            validPhase: true\n          });\n        } else {\n          _this2.setState({\n            validPhase: false\n          });\n        }\n      }).catch(function (error) {\n        _this2.setState({\n          validPhase: false\n        });\n      });\n    }\n  }, {\n    key: \"loadProjectDetails\",\n    value: function loadProjectDetails() {\n      var _this3 = this;\n\n      getProjectDetails().then(function (details) {\n        _this3.setState({\n          projectDetails: details,\n          detailsLoaded: true\n        });\n      }).catch(function (error) {\n        _this3.setState({\n          projectDetails: {},\n          detailsLoaded: false\n        });\n      });\n    }\n  }, {\n    key: \"loadAccounts\",\n    value: function loadAccounts() {\n      var _this4 = this;\n\n      getAllAccounts().then(function (response) {\n        _this4.setState({\n          accounts: response,\n          accountsLoaded: true\n        });\n      }).catch(function (error) {\n        _this4.setState({\n          accounts: [],\n          accountsLoaded: false\n        });\n      });\n    }\n  }, {\n    key: \"handleAccountChange\",\n    value: function handleAccountChange(value) {\n      this.setState({\n        chosenAccount: value,\n        accountChosen: true\n      });\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(evt, validationFunc) {\n      var tar = evt.target;\n      var inputName = tar.name;\n      var inputValue = tar.value;\n      this.setState(_defineProperty({}, inputName, _objectSpread({\n        value: inputValue\n      }, validationFunc(inputValue))));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this5 = this;\n\n      event.preventDefault();\n      getHash(this.state.nonce.value, this.state.bidAmount.value).then(function (hash) {\n        return submitHashedBid(_this5.state.chosenAccount, hash);\n      }).then(function (res) {\n        notification.success({\n          message: \"Success\",\n          description: \"Submitted hashed bid successfully!\"\n        });\n      }).catch(function (error) {\n        console.log(error);\n        notification.error({\n          message: \"Error\",\n          description: \"Unable to submit hashed bid!\"\n        });\n      });\n    }\n  }, {\n    key: \"validateNonce\",\n    value: function validateNonce(nonce) {\n      if (!NONNEGINT_REGEX.test(nonce)) {\n        return {\n          validateStatus: \"error\",\n          errorMsg: \"Nonce should be a non-negative integer!\"\n        };\n      } else {\n        return {\n          validateStatus: \"success\",\n          errorMsg: null\n        };\n      }\n    }\n  }, {\n    key: \"validateAmount\",\n    value: function validateAmount(amount) {\n      if (!POSINT_REGEX.test(amount)) {\n        return {\n          validateStatus: \"error\",\n          errorMsg: \"Amount should be a positive integer!\"\n        };\n      }\n\n      if (amount < deposit) {\n        // to change deposit to refer to deposit from contract\n        return {\n          validateStatus: \"error\",\n          errorMsg: \"Amount should be at least the same as deposit!\"\n        };\n      } else {\n        return {\n          validateStatus: \"success\",\n          errorMsg: null\n        };\n      }\n    }\n  }, {\n    key: \"isFormValid\",\n    value: function isFormValid() {\n      return this.state.accountChosen && this.state.nonce.validStatus === \"success\" && this.state.bidAmount.validStatus === \"success\";\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.checkPhase();\n      this.loadProjectDetails();\n      this.loadAccounts();\n    } //code to push state to HashGenerator contract\n    // TODO: display project details, reorganise stuff and change styling if needed\n    // need to check if bid amount is more than depositAmount (change solidity?)\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      console.log(this.state.validPhase);\n      console.log(this.state.detailsLoaded);\n      console.log(this.state.accountsLoaded);\n\n      if (this.state.validPhase && this.state.detailsLoaded && this.state.accountsLoaded) {\n        return React.createElement(\"div\", {\n          className: \"SubmitBidComponent\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, React.createElement(Box, {\n          py: 6,\n          px: 10,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, \"Submit your bid\"), React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, React.createElement(Form, {\n          labelCol: {\n            span: 5\n          },\n          wrapperCol: {\n            span: 12\n          },\n          onSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, React.createElement(Form.Item, {\n          label: \"Account\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, React.createElement(Select, {\n          showSearch: true,\n          style: {\n            width: 200\n          },\n          placeholder: \"Select an account\",\n          optionFilterProp: \"children\",\n          filterOption: function filterOption(input, option) {\n            return option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0;\n          },\n          onChange: this.handleAccountChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, this.state.accounts.map(function (value) {\n          return React.createElement(Option, {\n            key: value,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214\n            },\n            __self: this\n          }, value);\n        }))), React.createElement(Form.Item, {\n          label: \"Nonce\",\n          hasFeedback: true,\n          validateStatus: this.state.nonce.validateStatus,\n          help: this.state.nonce.errorMsg,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"number\",\n          size: \"large\",\n          name: \"nonce\",\n          onChange: function onChange(evt) {\n            _this6.handleInputChange(evt, _this6.validateNonce);\n          },\n          placeholder: \"Nonce\",\n          style: {\n            width: '65%',\n            marginRight: '3%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        })), React.createElement(Form.Item, {\n          label: \"Amount\",\n          hasFeedback: true,\n          validateStatus: this.state.bidAmount.validateStatus,\n          help: this.state.bidAmount.errorMsg,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"number\",\n          size: \"large\",\n          name: \"bidAmount\",\n          onChange: function onChange(evt) {\n            _this6.handleInputChange(evt, _this6.validateAmount);\n          },\n          placeholder: \"Amount\",\n          style: {\n            width: '65%',\n            marginRight: '3%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }), \" ETH\"), React.createElement(Form.Item, {\n          wrapperCol: {\n            span: 12,\n            offset: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, React.createElement(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          className: \"submit-bid-button\",\n          disabled: !this.isFormValid(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }, \"Submit\"))))));\n      } else if (this.state.validPhase && this.state.detailsLoaded) {\n        // return a page with just details\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        });\n      } else if (this.state.validPhase) {\n        // return empty page\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        });\n      } else {\n        // return a page that says invalid phase\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        });\n      }\n    }\n  }]);\n\n  return SubmitBidComponent;\n}(React.Component);\n\nexport default SubmitBidComponent; //\n// <form>\n//     <div>\n//         <div className=\"col-1\">\n//             <TextField\n//                 label=\"Enter bid amount\"\n//                 margin=\"normal\"\n//                 variant=\"outlined\"\n//                 value={this.state.bidAmt}\n//                 onChange={this.onChange}\n//             />\n//         </div>\n//         <div className=\"co1-2\">\n//             <TextField\n//                 label=\"Enter nounce\"\n//                 margin=\"normal\"\n//                 variant=\"outlined\"\n//                 value={this.state.nounce}\n//                 onChange={this.onChange}\n//             />\n//         </div>\n//         <div className=\"col-3\">\n//         <Button variant=\"contained\"\n//                 color=\"secondary\"\n//                 type=\"submit\"\n//                 value=\"submit\">\n//             Send\n//         </Button>\n//         </div>\n//     </div>\n// </form>","map":{"version":3,"sources":["/Users/raine/Documents/GitHub/bc-tender/app/src/SubmitBidComponent.js"],"names":["React","PropTypes","Box","Container","TextField","Button","Form","Input","notification","Select","AccountData","ContractData","ContractForm","getAllAccounts","getPhase","getProjectDetails","getHash","submitHashedBid","Option","NONNEGINT_REGEX","RegExp","POSINT_REGEX","deposit","SubmitBidComponent","props","state","validPhase","projectDetails","detailsLoaded","accounts","accountsLoaded","chosenAccount","accountChosen","nonce","value","validateStatus","errorMsg","bidAmount","checkPhase","bind","loadProjectDetails","loadAccounts","handleAccountChange","handleInputChange","handleSubmit","validateNonce","validateAmount","isFormValid","then","phase","setState","catch","error","details","response","evt","validationFunc","tar","target","inputName","name","inputValue","event","preventDefault","hash","res","success","message","description","console","log","test","amount","validStatus","span","width","input","option","children","toLowerCase","indexOf","map","marginRight","offset","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Container, TextField } from '@material-ui/core';\nimport { Button, Form, Input, notification, Select } from 'antd';\n\nimport {\n    AccountData,\n    ContractData,\n    ContractForm\n} from \"drizzle-react-components\";\nimport { getAllAccounts, getPhase, getProjectDetails, getHash, submitHashedBid } from \"./util\";\n\nconst { Option } = Select;\nconst NONNEGINT_REGEX = RegExp('^[1-9]+[0-9]*$|^0$');\nconst POSINT_REGEX = RegExp('^[1-9]+[0-9]*$');\nconst deposit = 1; // to remove\n\nclass SubmitBidComponent extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        validPhase: false,\n        projectDetails: {},\n        detailsLoaded: false,\n        accounts: [],\n        accountsLoaded: false,\n        chosenAccount: \"\",\n        accountChosen: false,\n        nonce: {\n          value: 0,\n          validateStatus: \"\",\n          errorMsg: null\n        },\n        bidAmount: {\n          value: 0,\n          validateStatus: \"\",\n          errorMsg: null\n        }\n      };\n\n      this.checkPhase = this.checkPhase.bind(this);\n      this.loadProjectDetails = this.loadProjectDetails.bind(this);\n      this.loadAccounts = this.loadAccounts.bind(this);\n      this.handleAccountChange = this.handleAccountChange.bind(this);\n      this.handleInputChange = this.handleInputChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.validateNonce = this.validateNonce.bind(this);\n      this.validateAmount = this.validateAmount.bind(this);\n      this.isFormValid = this.isFormValid.bind(this);\n    }\n\n    checkPhase() {\n      getPhase()\n      .then(phase => {\n        if (phase === \"Bidding Period\") {\n          this.setState({\n            validPhase: true\n          });\n        } else {\n          this.setState({\n            validPhase: false\n          });\n        }\n      }).catch(error => {\n        this.setState({\n          validPhase: false\n        });\n      });\n    }\n\n    loadProjectDetails() {\n      getProjectDetails()\n      .then(details => {\n        this.setState({\n          projectDetails: details,\n          detailsLoaded: true\n        });\n      }).catch(error => {\n        this.setState({\n          projectDetails: {},\n          detailsLoaded: false\n        })\n      });\n    }\n\n    loadAccounts() {\n      getAllAccounts()\n      .then(response => {\n        this.setState({\n          accounts: response,\n          accountsLoaded: true\n        });\n      }).catch(error => {\n        this.setState({\n          accounts: [],\n          accountsLoaded: false\n        })\n      });\n    }\n\n    handleAccountChange(value) {\n      this.setState({\n        chosenAccount: value,\n        accountChosen: true\n      });\n    }\n\n    handleInputChange(evt, validationFunc) {\n      const tar = evt.target;\n      const inputName = tar.name;\n      const inputValue = tar.value;\n\n      this.setState({\n          [inputName]: {\n            value: inputValue,\n            ...validationFunc(inputValue)\n          }\n      });\n    }\n\n    handleSubmit(event) {\n      event.preventDefault();\n      getHash(this.state.nonce.value, this.state.bidAmount.value)\n      .then(hash => {\n        return submitHashedBid(this.state.chosenAccount, hash);\n      }).then(res => {\n        notification.success({\n          message: \"Success\",\n          description: \"Submitted hashed bid successfully!\"\n        });\n      }).catch(error => {\n        console.log(error);\n        notification.error({\n          message: \"Error\",\n          description: \"Unable to submit hashed bid!\"\n        });\n      });\n    }\n\n    validateNonce(nonce) {\n      if (!NONNEGINT_REGEX.test(nonce)) {\n        return {\n          validateStatus: \"error\",\n          errorMsg: \"Nonce should be a non-negative integer!\"\n        };\n      } else {\n        return {\n          validateStatus: \"success\",\n          errorMsg: null\n        };\n      }\n    }\n\n    validateAmount(amount) {\n      if(!POSINT_REGEX.test(amount)) {\n        return {\n          validateStatus: \"error\",\n          errorMsg: \"Amount should be a positive integer!\"\n        };\n      }\n      if (amount < deposit) { // to change deposit to refer to deposit from contract\n        return {\n          validateStatus: \"error\",\n          errorMsg: \"Amount should be at least the same as deposit!\"\n        };\n      } else {\n        return {\n          validateStatus: \"success\",\n          errorMsg: null\n        };\n      }\n    }\n\n    isFormValid() {\n      return (this.state.accountChosen\n              && this.state.nonce.validStatus === \"success\"\n              && this.state.bidAmount.validStatus === \"success\");\n    }\n\n    componentDidMount() {\n      this.checkPhase();\n      this.loadProjectDetails();\n      this.loadAccounts();\n    }\n\n\n    //code to push state to HashGenerator contract\n    // TODO: display project details, reorganise stuff and change styling if needed\n    // need to check if bid amount is more than depositAmount (change solidity?)\n    render() {\n      console.log(this.state.validPhase);\n      console.log(this.state.detailsLoaded);\n      console.log(this.state.accountsLoaded);\n      if (this.state.validPhase && this.state.detailsLoaded && this.state.accountsLoaded) {\n        return (\n            <div className=\"SubmitBidComponent\">\n                <Box py={6} px={10}>\n                    <h3>Submit your bid</h3>\n                    <Container>\n                      <Form labelCol={{ span: 5 }} wrapperCol={{ span: 12 }} onSubmit={this.handleSubmit}>\n                        <Form.Item label=\"Account\">\n                          \n                            <Select\n                            showSearch\n                            style={{ width: 200 }}\n                            placeholder=\"Select an account\"\n                            optionFilterProp=\"children\"\n                            filterOption={(input, option) =>\n                              option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                            }\n                            onChange={this.handleAccountChange}\n                            >\n                              {this.state.accounts.map(value => (\n                                <Option key={value}>{value}</Option>\n                              ))}\n                            </Select>\n      \n                        </Form.Item>\n                        <Form.Item\n                          label=\"Nonce\"\n                          hasFeedback\n                          validateStatus={this.state.nonce.validateStatus}\n                          help={this.state.nonce.errorMsg}>\n                          <Input\n                            type=\"number\"\n                            size=\"large\"\n                            name=\"nonce\"\n                            onChange={evt => {this.handleInputChange(evt, this.validateNonce)}}\n                            placeholder=\"Nonce\"\n                            style={{ width: '65%', marginRight: '3%' }}\n                          />\n                        </Form.Item>\n                        <Form.Item\n                          label=\"Amount\"\n                          hasFeedback\n                          validateStatus={this.state.bidAmount.validateStatus}\n                          help={this.state.bidAmount.errorMsg}>\n                          <Input\n                            type=\"number\"\n                            size=\"large\"\n                            name=\"bidAmount\"\n                            onChange={evt => {this.handleInputChange(evt, this.validateAmount)}}\n                            placeholder=\"Amount\"\n                            style={{ width: '65%', marginRight: '3%' }}\n                          /> ETH\n                        </Form.Item>\n                        <Form.Item wrapperCol={{ span: 12, offset: 5 }}>\n                          <Button type=\"primary\" htmlType=\"submit\" className=\"submit-bid-button\" disabled={!this.isFormValid()}>\n                            Submit\n                          </Button>\n                        </Form.Item>\n                      </Form>\n                    </Container>\n                </Box>\n            </div>\n        );\n      } else if (this.state.validPhase && this.state.detailsLoaded) { // return a page with just details\n        return (\n          <div>\n            \n          </div>\n        );\n      } else if (this.state.validPhase) { // return empty page\n        return (\n          <div>\n          </div>\n        );\n      } else { // return a page that says invalid phase\n        return (\n          <div>\n          </div>\n        );\n      }\n    }\n}\n\nexport default SubmitBidComponent;\n//\n// <form>\n//     <div>\n//         <div className=\"col-1\">\n//             <TextField\n//                 label=\"Enter bid amount\"\n//                 margin=\"normal\"\n//                 variant=\"outlined\"\n//                 value={this.state.bidAmt}\n//                 onChange={this.onChange}\n//             />\n//         </div>\n//         <div className=\"co1-2\">\n//             <TextField\n//                 label=\"Enter nounce\"\n//                 margin=\"normal\"\n//                 variant=\"outlined\"\n//                 value={this.state.nounce}\n//                 onChange={this.onChange}\n//             />\n//         </div>\n//         <div className=\"col-3\">\n//         <Button variant=\"contained\"\n//                 color=\"secondary\"\n//                 type=\"submit\"\n//                 value=\"submit\">\n//             Send\n//         </Button>\n//         </div>\n//     </div>\n// </form>\n"]},"metadata":{},"sourceType":"module"}